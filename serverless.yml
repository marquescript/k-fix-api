# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: carlosmarquesprojects
# "service" is the name of this project. This will also be added to your AWS resource names.
service: k-fix-api

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  timeout: 15
  environment:
    NODE_ENV: ${env:NODE_ENV}
    MONGODB_URI: ${env:MONGODB_URI}
    MONGODB_URI_DEV: ${env:MONGODB_URI_DEV}
    JWT_SECRET: ${env:JWT_SECRET}
    JWT_REFRESH_SECRET: ${env:JWT_REFRESH_SECRET}
    ACCESS_TOKEN_EXPIRES_IN: ${env:ACCESS_TOKEN_EXPIRES_IN}
    REFRESH_TOKEN_EXPIRES_IN: ${env:REFRESH_TOKEN_EXPIRES_IN}

  #Configurações de HTTP API globai
  httpApi:
    cors:
      allowedOrigins:
        - 'http://localhost:3000'
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
    authorizers:
      customAuthorizer:
        type: request
        functionName: customAuthorizer
        identitySource:
          - "$request.header.Authorization"

plugins:
  - serverless-offline
  - serverless-esbuild
  - serverless-dotenv-plugin

custom:
  commonEnvVars:
    logLevel: "DEBUG"
  
  dotenv:
    path: .env

  build:
    esbuild:
      bundle: true
      minify: false
      sourcemap: true
      exclude:
        - aws-sdk
      platform: node
      concurrency: 10

functions:
  - ${file(functions/authorizers.yml)}
  - ${file(functions/auth.functions.yml)}
  - ${file(functions/user.functions.yml)}